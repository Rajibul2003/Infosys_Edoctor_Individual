@startuml
actor Patient as p
actor Doctor as d
actor Admin as a

participant User
participant PatientEntity
participant DoctorEntity
participant DoctorAvailabilityEntity
participant AppointmentEntity
participant FeedbackEntity

' Patient registers
p -> User: Register(username, email, password)
User -> User: Create User instance
User -> PatientEntity: Create Patient instance
User -> User: Set role as PATIENT
User -> PatientEntity: Save Patient details

' Patient books an appointment
p -> AppointmentEntity: Book Appointment(doctorId, patientId, appointmentDateTime, reason)
AppointmentEntity -> DoctorEntity: Fetch Doctor details
AppointmentEntity -> DoctorAvailabilityEntity: Check Doctor availability
DoctorAvailabilityEntity -> AppointmentEntity: Availability confirmed
AppointmentEntity -> AppointmentEntity: Save Appointment details
AppointmentEntity -> DoctorEntity: Notify Doctor about Appointment

' Doctor confirms the appointment
d -> AppointmentEntity: Confirm Appointment(status = Confirmed)
AppointmentEntity -> AppointmentEntity: Update Appointment status

' Patient provides feedback
p -> FeedbackEntity: Provide Feedback(patientId, doctorId, feedbackText, rating)
FeedbackEntity -> FeedbackEntity: Save Feedback details
FeedbackEntity -> DoctorEntity: Notify Doctor about Feedback

@enduml
